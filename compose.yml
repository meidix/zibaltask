services:
  reports_service:
    container_name: reports_service
    build:
      context: ./ziballike
      dockerfile: ./Dockerfile
    ports:
      - 8000:8000
    restart: always
    depends_on:
      - db
    volumes:
      - ./ziballike:/app
    command: python manage.py runserver 0.0.0.0:8000
  db:
    container_name: db
    image: mongo:latest
    ports:
      - 27017:27017
    restart: always
    volumes:
      - ./_db/data/:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=zibal
      - MONGO_INITDB_ROOT_PASSWORD=pass123Sec
  notification-service:
    container_name: notification-service
    build:
      context: ./zibnotify
      dockerfile: ./Dockerfile
    ports:
      - "8080:8000"
    restart: always
    volumes:
      - ./zibnotify:/app
    depends_on:
      - db
    command: python manage.py runserver 0.0.0.0:8000
  broker:
    container_name: broker
    image: rabbitmq:latest
    environment:
      - RABBITMQ_DEFAULT_USER=zibal
      - RABBITMQ_DEFAULT_PASS=pass123Sec
      - RABBITMQ_DEFAULT_VHOST=zibalecho
    ports:
      - 5672:5672
    volumes:
      - ./_broker/logs:/var/log/rabbitmq/
      - ./_broker/mnesia:/var/log/rabbitmq/mnesia/
  celery_notifier:
    container_name: celery_notifier
    build:
      context: ./zibnotify
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - broker
      - db
    command: celery -A zibnotify worker -l INFO -Q notification_queue
  celery_beat:
    container_name: celery_beat
    build:
      context: ./ziballike
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - broker
      - db
    command: celery -A ziballike beat
  celery_reporter:
    container_name: celery_reporter
    build:
      context: ./ziballike
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - broker
      - db
    command: celery -A ziballike worker -l INFO -Q reports_queue
